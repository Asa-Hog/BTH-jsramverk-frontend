{"ast":null,"code":"const docs = {\n  getAllDocs: async function getAllDocs() {\n    let a = `${URL}/docs`;\n    console.log(\"hello world\");\n    console.log(\"url is: \" + a); // // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n\n    const response = await fetch(\"http://localhost:1337/docs\"); //Fetch ger sträng\n    // // Får inte fram rätt url från två rader upp\n\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result); // // console.log(result.data);\n    // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n    return result;\n  },\n  create: async function create(data) {\n    console.log(data); // Data är tom - ska ta med html från editor\n    // const response = await fetch(`${URL}/create`);\n\n    const response = await fetch(\"http://localhost:1337/create\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }); // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n\n    console.log(response);\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result); // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n    // console.log(result.ops); //undefined\n    //  if (result.result.ok) {\n    //     return res.status(201).json({ data: result.ops });\n    // }\n    // console.log(\"Nytt dokument skapat med id: \" + result.insertedId);\n    // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n    return result;\n  },\n  update: async function update() {// const response = await fetch(`${URL}/update/:id`);\n    // const response = await fetch(\"http://localhost:1337/update/:id\");\n    // const result = await response.json(); // Gör om sträng till json\n    // return result;\n  }\n};\nexport default docs;","map":{"version":3,"names":["docs","getAllDocs","a","URL","console","log","response","fetch","result","json","create","data","method","headers","body","JSON","stringify","update"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/models/docs.js"],"sourcesContent":["const docs = {\n    getAllDocs: async function getAllDocs() {\n        let a = `${URL}/docs`;\n        console.log(\"hello world\");\n        console.log(\"url is: \" + a);\n        // // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n        const response = await fetch(\"http://localhost:1337/docs\");//Fetch ger sträng\n        // // Får inte fram rätt url från två rader upp\n\n        const result = await response.json(); // Gör om sträng till json\n\n        console.log(result);\n        // // console.log(result.data);\n\n        // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n        return result;\n    },\n\n    create: async function create(data) {\n\n        console.log(data); // Data är tom - ska ta med html från editor\n\n        // const response = await fetch(`${URL}/create`);\n        const response = await fetch(\"http://localhost:1337/create\",\n            { \n                method: \"POST\",\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(data)\n            }\n        );\n\n        // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n        console.log(response);\n        const result = await response.json(); // Gör om sträng till json\n\n        console.log(result);\n\n\n        // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n        // console.log(result.ops); //undefined\n\n        //  if (result.result.ok) {\n        //     return res.status(201).json({ data: result.ops });\n        // }\n\n\n        // console.log(\"Nytt dokument skapat med id: \" + result.insertedId);\n        // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n        return result;\n    },\n\n    update: async function update() {\n        // const response = await fetch(`${URL}/update/:id`);\n        // const response = await fetch(\"http://localhost:1337/update/:id\");\n\n        // const result = await response.json(); // Gör om sträng till json\n\n        // return result;\n    }\n};\n\nexport default docs;\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG;EACTC,UAAU,EAAE,eAAeA,UAAf,GAA4B;IACpC,IAAIC,CAAC,GAAI,GAAEC,GAAI,OAAf;IACAC,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,aAAaH,CAAzB,EAHoC,CAIpC;;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B,CALoC,CAKuB;IAC3D;;IAEA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CARoC,CAQE;;IAEtCL,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAVoC,CAWpC;IAEA;;IACA,OAAOA,MAAP;EACH,CAhBQ;EAkBTE,MAAM,EAAE,eAAeA,MAAf,CAAsBC,IAAtB,EAA4B;IAEhCP,OAAO,CAACC,GAAR,CAAYM,IAAZ,EAFgC,CAEb;IAEnB;;IACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EACxB;MACIK,MAAM,EAAE,MADZ;MAEIC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFb;MAGIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;IAHV,CADwB,CAA5B,CALgC,CAahC;;IACAP,OAAO,CAACC,GAAR,CAAYC,QAAZ;IACA,MAAME,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAfgC,CAeM;;IAEtCL,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAjBgC,CAoBhC;IACA;IAEA;IACA;IACA;IAGA;IACA;;IAEA,OAAOA,MAAP;EACH,CAlDQ;EAoDTS,MAAM,EAAE,eAAeA,MAAf,GAAwB,CAC5B;IACA;IAEA;IAEA;EACH;AA3DQ,CAAb;AA8DA,eAAejB,IAAf"},"metadata":{},"sourceType":"module"}