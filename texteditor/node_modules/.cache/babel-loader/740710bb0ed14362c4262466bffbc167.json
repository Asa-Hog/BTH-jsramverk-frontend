{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asa_h\\\\Desktop\\\\bth\\\\jsramverk\\\\frontend\\\\texteditor\\\\src\\\\components\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react'; // import ReactHtmlParser from 'react-html-parser';\n\nimport { TrixEditor } from \"react-trix\"; // import \"trix\";\n\nimport \"trix/dist/trix.css\";\nimport docsModel from '../../../../backend/models/docsModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = () => {\n  _s();\n\n  let [data, setData] = useState('');\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState({}); // const trixRef = useRef(null);\n  // const myRef = React.createRef();\n\n  useEffect(() => {\n    (async () => {\n      const allDocs = await docsModel.getAllDocs();\n      setDocs(allDocs);\n    })();\n  }, [currentDoc]);\n\n  let fetchDoc = () => {\n    // Hämta värde ur selectlista\n    let selectedDocId = document.getElementById(\"selectDoc\").value;\n    let chosenDoc = docs[selectedDocId];\n    console.log(\"Chosen doc\", chosenDoc); // Från början är currentDoc {} och data \"\"\n\n    setData(chosenDoc.html);\n    console.log(\"data: \", data); // Sätter data till valt dokuments data\n    // setCurrentDoc(chosenDoc); // när jag sätter detta uppdateras sidan\n    // - då blir currentDoc {} igen - NEJ, har ju precis ändrat värdet. Sidan uppdateras bara\n    // console.log(\"hämta valt dokument och visa det i editorn\");\n    // console.log(\"och spara det i currentDoc??\");\n    // var docId = document.getElementById(\"selectDoc\").value;\n    // console.log(docs[docId]);\n    // Skriv ut i editorn - UPPDATERA DATA I EDITORN AUTOMATISKT\n    // setCurrentDoc(chosenDoc); // Sätter currentDoc till valt dokument\n    // setCurrentDoc(chosenDoc);\n    // console.log(\"Current doc: \", currentDoc);\n  };\n\n  const printData = () => {\n    // console.log(\"skriv ut i konsollen\");\n    // if (ReactHtmlParser(data)[0].props !== undefined) {\n    //     console.log( ReactHtmlParser(data)[0].props.children ); // ger en array med objekt i\n    // }\n    // for (let row in  ReactHtmlParser(data)[0].props.children[row]) {\n    // \\filtrera ut element (br mm ?\n    //     console.log(row);\n    // }\n    if (data !== undefined) {\n      console.log(data);\n    }\n\n    ;\n  };\n\n  const createObject = async () => {\n    // doc = {_id: 123456, name: \"hej\", html: data};\n    // öppna ett formulär där man får fylla i namn? / \n    // inte ha med namn när dokument skapas utan ta med det när man vill spara sen? \n    //??????????????????????????????????????????????? name = ?????????\n    // Objektet får ett id som response efter detta\n    let doc = {\n      html: data\n    };\n    await docsModel.create(doc);\n  };\n\n  const updateObject = async () => {\n    // VILKET ID VILL VI UPPDATERA -\n    // OBJEKTET SOM VALTS I SELECTLISTAN - FETCHOBJECT\n    let doc = {\n      html: data\n    }; // let doc = {html: \"EJ UNDEF DATA\"};\n\n    await docsModel.update(doc);\n  };\n\n  const saveObject = () => {\n    console.log(\"spara objekt\");\n  }; // let handleEditor = (e, editor) => { \n  //     // setData(editor.getData());\n  //     setData(\"nytt\");\n  // }\n  // handleEditorReady(editor) {\n  //     // this is a reference back to the editor if you want to\n  //     // do editing programatically\n  //     editor.insertString(\"editor is ready\");\n  //   };\n\n\n  let onChange = (event, newValue) => {\n    // console.log(event); // hela html\n    // console.log(event.target); // De använde event.target.value\n    // console.log(newValue);\n    // setData(newValue);\n    setData(event);\n  };\n\n  let onEditorReady = (event, editor) => {\n    console.log(\"behövs?\"); // console.log(\"hej\", editor);\n    // trixRef.innerHTML = data;\n    // return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"trix-toolbar\", {\n      id: \"trix-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectDoc\",\n        onChange: fetchDoc,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"-99\",\n          children: \" Choose a document \"\n        }, \"0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), docs.map((doc, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [\" \", doc.name, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => createObject(),\n        children: \" Create \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateObject(),\n        children: \" Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveObject(),\n        children: \" Save \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TrixEditor, {\n      id: \"trixEditorContent\",\n      className: \"trix-editor\",\n      toolbar: \"trix-toolbar\" // editor = {TrixEditor}\n      // onEditorReady = { onEditorReady }\n      // onEditorReady = {(event, editor) => {onEditorReady(event, editor) }}\n      // onChange = {(event, editor) => {onChange(event, editor) }}\n      ,\n      onChange: onChange // ref = { trixRef }\n      ,\n      value: data // input = 'react-trix-editor'\n      ,\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editor, \"483za1sjxoWF5S2uJ9w8dIO+oF4=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TrixEditor","docsModel","Editor","data","setData","docs","setDocs","currentDoc","setCurrentDoc","allDocs","getAllDocs","fetchDoc","selectedDocId","document","getElementById","value","chosenDoc","console","log","html","printData","undefined","createObject","doc","create","updateObject","update","saveObject","onChange","event","newValue","onEditorReady","editor","map","index","name"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n// import ReactHtmlParser from 'react-html-parser';\nimport { TrixEditor } from \"react-trix\";\n\n// import \"trix\";\nimport \"trix/dist/trix.css\";\n\nimport docsModel from '../../../../backend/models/docsModel';\n\nconst Editor = () => {\n    let [data, setData] = useState('');\n    const [docs, setDocs] = useState([]);\n    const [currentDoc, setCurrentDoc] = useState({});\n    // const trixRef = useRef(null);\n    // const myRef = React.createRef();\n\n    useEffect(() => {\n        (async () => {\n            const allDocs = await docsModel.getAllDocs();\n            setDocs(allDocs);\n        })();\n    }, [currentDoc]);\n\n    let fetchDoc = () => {\n        // Hämta värde ur selectlista\n        let selectedDocId = document.getElementById(\"selectDoc\").value;\n        let chosenDoc = docs[selectedDocId];\n        console.log(\"Chosen doc\", chosenDoc);\n\n        // Från början är currentDoc {} och data \"\"\n        setData(chosenDoc.html);\n        console.log(\"data: \", data); // Sätter data till valt dokuments data\n \n        // setCurrentDoc(chosenDoc); // när jag sätter detta uppdateras sidan\n        // - då blir currentDoc {} igen - NEJ, har ju precis ändrat värdet. Sidan uppdateras bara\n\n        // console.log(\"hämta valt dokument och visa det i editorn\");\n        // console.log(\"och spara det i currentDoc??\");\n        // var docId = document.getElementById(\"selectDoc\").value;\n        // console.log(docs[docId]);\n        // Skriv ut i editorn - UPPDATERA DATA I EDITORN AUTOMATISKT\n\n        // setCurrentDoc(chosenDoc); // Sätter currentDoc till valt dokument\n        // setCurrentDoc(chosenDoc);\n        // console.log(\"Current doc: \", currentDoc);\n    }\n\n    const printData = () => { \n        // console.log(\"skriv ut i konsollen\");\n        // if (ReactHtmlParser(data)[0].props !== undefined) {\n        //     console.log( ReactHtmlParser(data)[0].props.children ); // ger en array med objekt i\n        // }\n        // for (let row in  ReactHtmlParser(data)[0].props.children[row]) {\n            // \\filtrera ut element (br mm ?\n        //     console.log(row);\n        // }\n        if (data !== undefined) {\n            console.log(data);\n        };\n    };\n\n    const createObject = async () => {\n        // doc = {_id: 123456, name: \"hej\", html: data};\n        // öppna ett formulär där man får fylla i namn? / \n        // inte ha med namn när dokument skapas utan ta med det när man vill spara sen? \n        //??????????????????????????????????????????????? name = ?????????\n        // Objektet får ett id som response efter detta\n        let doc = {html: data};\n        await docsModel.create(doc);\n    };\n\n    const updateObject = async () => { \n        // VILKET ID VILL VI UPPDATERA -\n        // OBJEKTET SOM VALTS I SELECTLISTAN - FETCHOBJECT\n        let doc = {html: data};\n        // let doc = {html: \"EJ UNDEF DATA\"};\n        await docsModel.update(doc);\n    };\n\n    const saveObject = () => { \n        console.log( \"spara objekt\" );\n    };\n\n    // let handleEditor = (e, editor) => { \n    //     // setData(editor.getData());\n    //     setData(\"nytt\");\n    // }\n\n    // handleEditorReady(editor) {\n    //     // this is a reference back to the editor if you want to\n    //     // do editing programatically\n    //     editor.insertString(\"editor is ready\");\n    //   };\n\n\n    let onChange = (event, newValue) => { \n        // console.log(event); // hela html\n        // console.log(event.target); // De använde event.target.value\n        // console.log(newValue);\n        // setData(newValue);\n        setData(event);\n    }\n\n    let onEditorReady = (event, editor) => {\n        console.log(\"behövs?\");\n        // console.log(\"hej\", editor);\n        // trixRef.innerHTML = data;\n        // return;\n    }\n\n    return (\n        <div className = \"editor\">\n            {/* <h1> Text editor </h1> */}\n\n            <trix-toolbar id = \"trix-toolbar\">\n\n                {/* <button onClick = {()=> printData() }> Save </button> */}\n                <select id = \"selectDoc\" onChange = { fetchDoc }>\n                    <option value = \"-99\" key = \"0\"> Choose a document </option>\n                    {docs.map((doc, index) => <option value = {index} key = {index}> {doc.name} </option>)}\n                </select>\n\n                <button onClick = {()=> createObject() }> Create </button>\n                <button onClick = {()=> updateObject() }> Update </button>\n                <button onClick = {()=> saveObject() }> Save </button>\n\n            </trix-toolbar>\n\n\n            <TrixEditor id = \"trixEditorContent\" className = \"trix-editor\" toolbar = \"trix-toolbar\"\n                // editor = {TrixEditor}\n                // onEditorReady = { onEditorReady }\n                // onEditorReady = {(event, editor) => {onEditorReady(event, editor) }}\n                // onChange = {(event, editor) => {onChange(event, editor) }}\n                onChange = { onChange } \n                // ref = { trixRef }\n                value = { data }\n                // input = 'react-trix-editor'\n            >\n                { data }\n\n            </TrixEditor>\n        </div>\n    )\n}\n\nexport default Editor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}