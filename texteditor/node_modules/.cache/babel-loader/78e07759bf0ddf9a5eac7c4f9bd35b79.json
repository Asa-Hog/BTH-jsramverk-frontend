{"ast":null,"code":"const docs = {\n  // setCurrentDoc: async function getAllDocs() {\n  //     let a = `${URL}/docs`;\n  //     // console.log(\"hello world\");\n  //     // console.log(\"url is: \" + a);\n  //     // // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n  //     const response = await fetch(\"http://localhost:1337/docs\");//Fetch ger sträng\n  //     // // Får inte fram rätt url från två rader upp\n  //     const result = await response.json(); // Gör om sträng till json\n  //     console.log(result);\n  //     // console.log(result.data);\n  //     // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n  //     return result;\n  // },\n  baseUrl: function () {\n    console.log(location.href);\n  },\n  getAllDocs: async function getAllDocs() {\n    let a = `${URL}/docs`; // console.log(\"hello world\");\n    // console.log(\"url is: \" + a);\n    // // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n\n    const response = await fetch(\"http://localhost:1337/docs\"); //Fetch ger sträng\n    // // Får inte fram rätt url från två rader upp\n\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result); // console.log(result.data);\n    // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n    return result;\n  },\n  create: async function create(doc) {\n    // const response = await fetch(`${URL}/create`);\n    const response = await fetch(\"http://localhost:1337/create\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(doc)\n    }); // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n\n    console.log(response);\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result); // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n    // console.log(result.result.ops); //undefined - ger error\n    //  if (result.result.ok) {\n    //     return res.status(201).json({ data: result.ops });\n    // }\n    // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    // Göra nåt med id:t jag får tillbaka?\n\n    return result;\n  },\n  update: async function update(doc) {\n    // const response = await fetch(`${URL}/update/:id`);\n    const response = await fetch(\"http://localhost:1337/update\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // headers: {'Content-Type': 'Access-Control-Allow-Origin'},\n      // headers: {\"Content-type\": \"application/x-www-form-urlencoded\"},\n      body: JSON.stringify(doc)\n    });\n    console.log(response); // Response jag får är fel\n\n    const result = await response.json(); // Gör om response till json\n\n    console.log(result); // Tomt, pga att response är fel\n\n    return result;\n  }\n};\nexport default docs;","map":{"version":3,"names":["docs","baseUrl","console","log","location","href","getAllDocs","a","URL","response","fetch","result","json","create","doc","method","headers","body","JSON","stringify","update"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/models/docs.js"],"sourcesContent":["const docs = {\n    // setCurrentDoc: async function getAllDocs() {\n    //     let a = `${URL}/docs`;\n    //     // console.log(\"hello world\");\n    //     // console.log(\"url is: \" + a);\n    //     // // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n    //     const response = await fetch(\"http://localhost:1337/docs\");//Fetch ger sträng\n    //     // // Får inte fram rätt url från två rader upp\n\n    //     const result = await response.json(); // Gör om sträng till json\n\n    //     console.log(result);\n    //     // console.log(result.data);\n\n    //     // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    //     return result;\n    // },\n    baseUrl: function() {\n        console.log(location.href);\n    },\n\n\n    getAllDocs: async function getAllDocs() {\n        let a = `${URL}/docs`;\n        // console.log(\"hello world\");\n        // console.log(\"url is: \" + a);\n        // // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n        const response = await fetch(\"http://localhost:1337/docs\");//Fetch ger sträng\n        // // Får inte fram rätt url från två rader upp\n\n\n\n\n\n\n        const result = await response.json(); // Gör om sträng till json\n\n        console.log(result);\n        // console.log(result.data);\n\n        // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n        return result;\n    },\n\n    create: async function create(doc) {\n        // const response = await fetch(`${URL}/create`);\n        const response = await fetch(\"http://localhost:1337/create\",\n            { \n                method: \"POST\",\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(doc)\n            }\n        );\n\n        // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n        console.log(response);\n        const result = await response.json(); // Gör om sträng till json\n        console.log(result);\n\n        // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n        // console.log(result.result.ops); //undefined - ger error\n        //  if (result.result.ok) {\n        //     return res.status(201).json({ data: result.ops });\n        // }\n        // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n        // Göra nåt med id:t jag får tillbaka?\n\n        return result;\n    },\n\n    update: async function update(doc) {\n        // const response = await fetch(`${URL}/update/:id`);\n        const response = await fetch(\"http://localhost:1337/update\",\n            { \n                method: \"PUT\",\n                headers: {\"Content-Type\": \"application/json\"},\n                // headers: {'Content-Type': 'Access-Control-Allow-Origin'},\n                // headers: {\"Content-type\": \"application/x-www-form-urlencoded\"},\n                body: JSON.stringify(doc)\n            }\n        );\n\n        console.log(response); // Response jag får är fel\n        const result = await response.json(); // Gör om response till json\n        console.log(result); // Tomt, pga att response är fel\n        return result;\n    }\n};\n\nexport default docs;\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACAC,OAAO,EAAE,YAAW;IAChBC,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,IAArB;EACH,CAnBQ;EAsBTC,UAAU,EAAE,eAAeA,UAAf,GAA4B;IACpC,IAAIC,CAAC,GAAI,GAAEC,GAAI,OAAf,CADoC,CAEpC;IACA;IACA;;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B,CALoC,CAKuB;IAC3D;;IAOA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAboC,CAaE;;IAEtCV,OAAO,CAACC,GAAR,CAAYQ,MAAZ,EAfoC,CAgBpC;IAEA;;IACA,OAAOA,MAAP;EACH,CA1CQ;EA4CTE,MAAM,EAAE,eAAeA,MAAf,CAAsBC,GAAtB,EAA2B;IAC/B;IACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EACxB;MACIK,MAAM,EAAE,MADZ;MAEIC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFb;MAGIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;IAHV,CADwB,CAA5B,CAF+B,CAU/B;;IACAZ,OAAO,CAACC,GAAR,CAAYM,QAAZ;IACA,MAAME,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAZ+B,CAYO;;IACtCV,OAAO,CAACC,GAAR,CAAYQ,MAAZ,EAb+B,CAe/B;IACA;IACA;IACA;IACA;IACA;IAEA;;IAEA,OAAOA,MAAP;EACH,CArEQ;EAuETS,MAAM,EAAE,eAAeA,MAAf,CAAsBN,GAAtB,EAA2B;IAC/B;IACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EACxB;MACIK,MAAM,EAAE,KADZ;MAEIC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFb;MAGI;MACA;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,GAAf;IALV,CADwB,CAA5B;IAUAZ,OAAO,CAACC,GAAR,CAAYM,QAAZ,EAZ+B,CAYR;;IACvB,MAAME,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAb+B,CAaO;;IACtCV,OAAO,CAACC,GAAR,CAAYQ,MAAZ,EAd+B,CAcV;;IACrB,OAAOA,MAAP;EACH;AAvFQ,CAAb;AA0FA,eAAeX,IAAf"},"metadata":{},"sourceType":"module"}