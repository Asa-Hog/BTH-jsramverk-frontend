{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asa_h\\\\Desktop\\\\bth\\\\jsramverk\\\\frontend\\\\texteditor\\\\src\\\\components\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import ReactHtmlParser from 'react-html-parser';\n\nimport { TrixEditor } from \"react-trix\"; // import \"trix\";\n\nimport \"trix/dist/trix.css\"; // import saveForm from './saveForm';\n\nimport docsModel from '../models/docsModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = () => {\n  _s();\n\n  let [data, setData] = useState('');\n  const [docs, setDocs] = useState([]);\n  const [currentDoc, setCurrentDoc] = useState({});\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      const allDocs = await docsModel.getAllDocs();\n      setDocs(allDocs);\n    })();\n  }, [currentDoc]); // const printData = () => { \n  //     // console.log(\"skriv ut i konsollen\");\n  //     // if (ReactHtmlParser(data)[0].props !== undefined) {\n  //     //     console.log( ReactHtmlParser(data)[0].props.children ); // ger en array med objekt i\n  //     // }\n  //     // for (let row in  ReactHtmlParser(data)[0].props.children[row]) {\n  //         // \\filtrera ut element (br mm ?\n  //     //     console.log(row);\n  //     // }\n  //     if (data !== undefined) {\n  //         console.log(data);\n  //     };\n  // };\n\n  let handleSelectedDoc = () => {\n    // Hämta värde ur selectlista\n    let selectedDocId = document.getElementById(\"selectDoc\").value;\n    let selectedDoc = docs[selectedDocId];\n    setCurrentDoc(selectedDoc);\n    console.log(selectedDoc);\n\n    if (selectedDoc !== undefined) {\n      setEditorContent(selectedDoc);\n    }\n  }; // console.log(event); // hela html\n  // console.log(event.target); // De använde event.target.value\n  // function setEditorContent(content, triggerChange) {\n\n\n  function setEditorContent(selectedDoc) {\n    let element = document.querySelector(\"trix-editor\"); // let element = document.getElementById(\"selectDoc\"); // element.editor is undefined med denna, men ej ovanstående element som är samma sak\n\n    element.value = \"\"; // element.editor.setSelectedRange([0, 0]);\n\n    element.editor.insertHTML(selectedDoc.html); // selectedDoc.innerHTML = \"hej\";\n  }\n\n  ;\n\n  const resetDb = async () => {\n    await docsModel.reset();\n  };\n\n  const createObject = async () => {\n    let newDoc = {};\n    newDoc.html = data;\n    console.log(\"Hämta namn\"); // let docName = document.getElementById(\"saveForm\").value;\n\n    let docName = document.querySelector(\"saveForm\").value;\n    console.log(docName); //undefined\n    // newDoc.name = docName;\n\n    newDoc.name = \"Nytt dokument\"; // Förstår inte hur jag får fram namn från formuläret\n\n    console.log(\"newDoc\", newDoc);\n    await docsModel.create(newDoc);\n  };\n\n  const showSaveForm = () => {\n    // Visa formuläret med CSS\n    document.getElementById(\"saveForm\").style.display = \"block\"; // Lägg till eventlyssnare\n    // let saveForm = document.getElementById(\"saveForm\");\n    // saveForm.addEventListener(\"submit\", preventDefault(), true);\n  }; // const preventDefault = (event) => {\n  //     event.preventDefault();\n  // };\n\n\n  const updateObject = async () => {\n    if (currentDoc == undefined) {\n      alert(\"Please choose a file to update\");\n    } else {\n      currentDoc.html = data; // Ändrar html för currentDoc till det som står i editorn\n\n      await docsModel.update(currentDoc);\n    }\n  }; // const saveObject = () => { \n  //     console.log( \"spara objekt\" );\n  // };\n  // let handleEditor = (e, editor) => { \n  //     // setData(editor.getData());\n  //     setData(\"nytt\");\n  // }\n  // handleEditorReady(editor) {\n  //     // this is a reference back to the editor if you want to\n  //     // do editing programatically\n  //     editor.insertString(\"editor is ready\");\n  //   };\n\n\n  let setEditorData = event => {\n    setData(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"trix-toolbar\", {\n      id: \"trix-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => resetDb(),\n        children: \" Reset \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => showSaveForm(),\n        children: \" Create new \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectDoc\",\n        onChange: handleSelectedDoc,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"-99\",\n          children: \" Choose a document \"\n        }, \"0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), docs.map((doc, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [\" \", doc.name, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => updateObject(),\n        children: \" Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"saveForm\",\n      id: \"saveForm\",\n      onSubmit: createObject,\n      style: {\n        display: \"none\"\n      },\n      children: [\"Name of file:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        id: \"fileName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\",\n        value: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TrixEditor, {\n      id: \"trixEditorContent\",\n      className: \"trix-editor\",\n      toolbar: \"trix-toolbar\" // editor = {TrixEditor}\n      // onEditorReady = {(event, editor) => {onEditorReady(event, editor) }}\n      ,\n      onChange: setEditorData // onChange={props.change}\n      // value = { data }\n      // input = 'react-trix-editor'\n      // autoFocus={true}\n      // default={props.default}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editor, \"zaUiKa9aZF9ptSBDLhpvR5I9eQg=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useEffect","TrixEditor","docsModel","Editor","data","setData","docs","setDocs","currentDoc","setCurrentDoc","name","setName","allDocs","getAllDocs","handleSelectedDoc","selectedDocId","document","getElementById","value","selectedDoc","console","log","undefined","setEditorContent","element","querySelector","editor","insertHTML","html","resetDb","reset","createObject","newDoc","docName","create","showSaveForm","style","display","updateObject","alert","update","setEditorData","event","map","doc","index"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import ReactHtmlParser from 'react-html-parser';\nimport { TrixEditor } from \"react-trix\";\n// import \"trix\";\nimport \"trix/dist/trix.css\";\n// import saveForm from './saveForm';\n\nimport docsModel from '../models/docsModel';\n\nconst Editor = () => {\n    let [data, setData] = useState('');\n    const [docs, setDocs] = useState([]);\n    const [currentDoc, setCurrentDoc] = useState({});\n    const [name, setName] = useState(\"\");\n\n    useEffect(() => {\n        (async () => {\n            const allDocs = await docsModel.getAllDocs();\n            setDocs(allDocs);\n        })();\n    }, [currentDoc]);\n\n    // const printData = () => { \n    //     // console.log(\"skriv ut i konsollen\");\n    //     // if (ReactHtmlParser(data)[0].props !== undefined) {\n    //     //     console.log( ReactHtmlParser(data)[0].props.children ); // ger en array med objekt i\n    //     // }\n    //     // for (let row in  ReactHtmlParser(data)[0].props.children[row]) {\n    //         // \\filtrera ut element (br mm ?\n    //     //     console.log(row);\n    //     // }\n    //     if (data !== undefined) {\n    //         console.log(data);\n    //     };\n    // };\n\n    let handleSelectedDoc = () => {\n        // Hämta värde ur selectlista\n        let selectedDocId = document.getElementById(\"selectDoc\").value;\n        let selectedDoc = docs[selectedDocId];\n\n        setCurrentDoc(selectedDoc);\n        console.log(selectedDoc);\n\n        if (selectedDoc !== undefined) {\n            setEditorContent(selectedDoc);\n        }\n     };\n\n    // console.log(event); // hela html\n    // console.log(event.target); // De använde event.target.value\n    // function setEditorContent(content, triggerChange) {\n    function setEditorContent(selectedDoc) {\n        let element = document.querySelector(\"trix-editor\");\n        // let element = document.getElementById(\"selectDoc\"); // element.editor is undefined med denna, men ej ovanstående element som är samma sak\n            element.value = \"\";\n            // element.editor.setSelectedRange([0, 0]);\n            element.editor.insertHTML(selectedDoc.html);\n        // selectedDoc.innerHTML = \"hej\";\n};\n\n    const resetDb = async () => {\n        await docsModel.reset();\n    };\n\n\n    const createObject = async () => {\n        let newDoc = {};\n        newDoc.html = data;\n\n        console.log(\"Hämta namn\");\n        // let docName = document.getElementById(\"saveForm\").value;\n        let docName = document.querySelector(\"saveForm\").value;\n        console.log(docName); //undefined\n\n        // newDoc.name = docName;\n        newDoc.name = \"Nytt dokument\"; // Förstår inte hur jag får fram namn från formuläret\n        console.log(\"newDoc\", newDoc);\n        await docsModel.create(newDoc);\n\n    };\n\n\n\n    const showSaveForm = () => {\n        // Visa formuläret med CSS\n        document.getElementById(\"saveForm\").style.display = \"block\";\n        // Lägg till eventlyssnare\n        // let saveForm = document.getElementById(\"saveForm\");\n        // saveForm.addEventListener(\"submit\", preventDefault(), true);\n    };\n    \n    // const preventDefault = (event) => {\n    //     event.preventDefault();\n    // };\n\n\n\n\n    const updateObject = async () => { \n        if (currentDoc == undefined) {\n            alert(\"Please choose a file to update\");\n        } else {\n            currentDoc.html = data; // Ändrar html för currentDoc till det som står i editorn\n            await docsModel.update(currentDoc);\n        }\n    };\n\n    // const saveObject = () => { \n    //     console.log( \"spara objekt\" );\n    // };\n\n    // let handleEditor = (e, editor) => { \n    //     // setData(editor.getData());\n    //     setData(\"nytt\");\n    // }\n\n    // handleEditorReady(editor) {\n    //     // this is a reference back to the editor if you want to\n    //     // do editing programatically\n    //     editor.insertString(\"editor is ready\");\n    //   };\n\n    let setEditorData = (event) => { \n        setData(event);\n    };\n\n    return (\n        <div className = \"editor\">\n\n            <trix-toolbar id = \"trix-toolbar\">\n\n                <button className = \"button\" onClick = {()=> resetDb() }> Reset </button>\n                <button className = \"button\" onClick = {()=> showSaveForm() }> Create new </button>\n\n                <select id = \"selectDoc\" onChange = { handleSelectedDoc } >\n                    <option value = \"-99\" key = \"0\"> Choose a document </option>\n                    {docs.map((doc, index) => <option value = {index} key = {index}> {doc.name} </option>)}\n                </select>\n\n                <button className = \"button\" onClick = {()=> updateObject() }> Update </button>\n            </trix-toolbar>\n\n        {/* <saveForm /> */}\n        <form className = \"saveForm\" id = \"saveForm\" onSubmit = { createObject } style = {{display: \"none\"}}>Name of file:\n                <input className = \"button\" id = \"fileName\" type = \"text\"></input>\n                <input className = \"button\" type = \"submit\" value = \"Save\"></input>\n            </form>\n\n\n            <TrixEditor id = \"trixEditorContent\" className = \"trix-editor\" toolbar = \"trix-toolbar\"\n                // editor = {TrixEditor}\n                // onEditorReady = {(event, editor) => {onEditorReady(event, editor) }}\n                onChange = { setEditorData } \n                // onChange={props.change}\n                // value = { data }\n                // input = 'react-trix-editor'\n                // autoFocus={true}\n                // default={props.default}\n            />\n        </div>\n\n\n    )\n}\n\nexport default Editor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}