{"ast":null,"code":"const docsModel = {\n  // setCurrentDoc: async function getAllDocs() {\n  //     const response = await fetch(`${docs.baseUrl}/docs`);//Fetch ger sträng\n  //     const result = await response.json(); // Gör om sträng till json\n  //     console.log(result);\n  //     // console.log(result.data);\n  //     // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n  //     return result;\n  // },\n  baseUrl: window.location.href.includes(\"localhost\") ? \"http://localhost:1337\" : \"driftsatt api i azure\",\n  getAllDocs: async function getAllDocs() {\n    const response = await fetch(`${docsModel.baseUrl}/docs`); //Fetch ger sträng\n\n    const result = await response.json(); // Gör om sträng till json\n    // console.log(result);\n\n    return result.data;\n  },\n  create: async function create(data) {\n    console.log(data);\n    const response = await fetch(`${docsModel.baseUrl}/create`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }); //     console.log(response);\n\n    const result = await response.json(); // Gör om sträng till json\n    //     console.log(result);\n    //     // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n    //     // console.log(response.status(201).json(result)); //undefined - ger error\n    //     // console.log(result.result.ops); //undefined - ger error\n    //     //  if (result.result.ok) {\n    //     //     return res.status(201).json({ data: result.ops });\n    //     // }\n    //     // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    //     // Göra nåt med id:t jag får tillbaka?\n\n    return result;\n  },\n  create: async function create(newDoc) {// // const database = require(\"../db/database\");\n    // let db;\n    // const response = await fetch(`${docsModel.baseUrl}/create`,\n    //     { \n    //         method: \"POST\",\n    //         headers: {'Content-Type': 'application/json'},\n    //         body: JSON.stringify(doc)\n    //     }\n    // );\n    // // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n    // console.log(response);\n    // const result = await response.json(); // Gör om sträng till json\n    // console.log(result);\n    // return result;\n    // let db;\n    // try {\n    //     db = await database.getDb();\n    //     const result = await db.collection.insertOne(newDoc);\n    //     // console.log(result);\n    //     return {\n    //         ...newDoc,\n    //         _id: result.insertedId\n    //     }\n    // } catch (error) {\n    //     return {\n    //         errors: {\n    //             message: error.message,\n    //         }\n    //     };\n    // } finally {\n    //     await db.client.close();\n    // }\n  },\n  update: async function update(doc) {\n    // const response = await fetch(`${URL}/update/:id`);\n    const response = await fetch(`${docsModel.baseUrl}/update`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // headers: {'Content-Type': 'Access-Control-Allow-Origin'},\n      // headers: {\"Content-type\": \"application/x-www-form-urlencoded\"},\n      body: JSON.stringify(doc)\n    });\n    console.log(response); // Response jag får är fel\n\n    const result = await response.json(); // Gör om response till json\n\n    console.log(result); // Tomt, pga att response är fel\n\n    return result;\n  }\n};\nexport default docsModel;","map":{"version":3,"names":["docsModel","baseUrl","window","location","href","includes","getAllDocs","response","fetch","result","json","data","create","console","log","method","headers","body","JSON","stringify","newDoc","update","doc"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/models/docsModel.js"],"sourcesContent":["const docsModel = {\n    // setCurrentDoc: async function getAllDocs() {\n    //     const response = await fetch(`${docs.baseUrl}/docs`);//Fetch ger sträng\n\n    //     const result = await response.json(); // Gör om sträng till json\n\n    //     console.log(result);\n    //     // console.log(result.data);\n\n    //     // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    //     return result;\n    // },\n    baseUrl: window.location.href.includes(\"localhost\") ? \n        \"http://localhost:1337\" :\n        \"driftsatt api i azure\",\n\n\n    getAllDocs: async function getAllDocs() {\n        const response = await fetch(`${docsModel.baseUrl}/docs`);//Fetch ger sträng\n\n        const result = await response.json(); // Gör om sträng till json\n\n        // console.log(result);\n        return result.data;\n    },\n\n    create: async function create(data) {\n        console.log(data);\n        const response = await fetch(`${docsModel.baseUrl}/create`,\n            { \n                method: \"POST\",\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(data)\n            }\n        );\n\n    //     console.log(response);\n        const result = await response.json(); // Gör om sträng till json\n    //     console.log(result);\n\n\n    //     // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n    //     // console.log(response.status(201).json(result)); //undefined - ger error\n    //     // console.log(result.result.ops); //undefined - ger error\n    //     //  if (result.result.ok) {\n    //     //     return res.status(201).json({ data: result.ops });\n    //     // }\n    //     // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    //     // Göra nåt med id:t jag får tillbaka?\n\n        return result;\n    },\n\n    create: async function create(newDoc) {\n        // // const database = require(\"../db/database\");\n        // let db;\n        // const response = await fetch(`${docsModel.baseUrl}/create`,\n        //     { \n        //         method: \"POST\",\n        //         headers: {'Content-Type': 'application/json'},\n        //         body: JSON.stringify(doc)\n        //     }\n        // );\n\n        // // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n        // console.log(response);\n        // const result = await response.json(); // Gör om sträng till json\n        // console.log(result);\n\n        // return result;\n\n\n        // let db;\n        // try {\n        //     db = await database.getDb();\n\n        //     const result = await db.collection.insertOne(newDoc);\n\n        //     // console.log(result);\n        //     return {\n        //         ...newDoc,\n        //         _id: result.insertedId\n        //     }\n        // } catch (error) {\n        //     return {\n        //         errors: {\n        //             message: error.message,\n        //         }\n        //     };\n        // } finally {\n        //     await db.client.close();\n        // }\n\n\n    },\n\n    update: async function update(doc) {\n        // const response = await fetch(`${URL}/update/:id`);\n        const response = await fetch(`${docsModel.baseUrl}/update`,\n            { \n                method: \"PUT\",\n                headers: {\"Content-Type\": \"application/json\"},\n                // headers: {'Content-Type': 'Access-Control-Allow-Origin'},\n                // headers: {\"Content-type\": \"application/x-www-form-urlencoded\"},\n                body: JSON.stringify(doc)\n            }\n        );\n\n        console.log(response); // Response jag får är fel\n        const result = await response.json(); // Gör om response till json\n        console.log(result); // Tomt, pga att response är fel\n        return result;\n    }\n};\n\nexport default docsModel;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG;EACd;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACAC,OAAO,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,WAA9B,IACL,uBADK,GAEL,uBAdU;EAiBdC,UAAU,EAAE,eAAeA,UAAf,GAA4B;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,SAAS,CAACC,OAAQ,OAAtB,CAA5B,CADoC,CACsB;;IAE1D,MAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAHoC,CAGE;IAEtC;;IACA,OAAOD,MAAM,CAACE,IAAd;EACH,CAxBa;EA0BdC,MAAM,EAAE,eAAeA,MAAf,CAAsBD,IAAtB,EAA4B;IAChCE,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACA,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,SAAS,CAACC,OAAQ,SAAtB,EACxB;MACIc,MAAM,EAAE,MADZ;MAEIC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFb;MAGIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;IAHV,CADwB,CAA5B,CAFgC,CAUpC;;IACI,MAAMF,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAXgC,CAWM;IAC1C;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEI,OAAOD,MAAP;EACH,CAnDa;EAqDdG,MAAM,EAAE,eAAeA,MAAf,CAAsBQ,MAAtB,EAA8B,CAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAGA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGH,CA9Fa;EAgGdC,MAAM,EAAE,eAAeA,MAAf,CAAsBC,GAAtB,EAA2B;IAC/B;IACA,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,SAAS,CAACC,OAAQ,SAAtB,EACxB;MACIc,MAAM,EAAE,KADZ;MAEIC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFb;MAGI;MACA;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,GAAf;IALV,CADwB,CAA5B;IAUAT,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAZ+B,CAYR;;IACvB,MAAME,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAb+B,CAaO;;IACtCG,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAd+B,CAcV;;IACrB,OAAOA,MAAP;EACH;AAhHa,CAAlB;AAmHA,eAAeT,SAAf"},"metadata":{},"sourceType":"module"}