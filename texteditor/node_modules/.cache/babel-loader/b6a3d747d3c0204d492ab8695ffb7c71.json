{"ast":null,"code":"// const database = require(\"../../../../backend/db/database\");\n// const database = require(\"../../frontend/texteditor/src\");\nconst docsModel = {\n  // setCurrentDoc: async function getAllDocs() {\n  //     const response = await fetch(`${docs.baseUrl}/docs`);//Fetch ger sträng\n  //     const result = await response.json(); // Gör om sträng till json\n  //     console.log(result);\n  //     // console.log(result.data);\n  //     // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n  //     return result;\n  // },\n  baseUrl: window.location.href.includes(\"localhost\") ? \"http://localhost:1337\" : \"driftsatt api i azure\",\n  getAllDocs: async function getAllDocs() {\n    const response = await fetch(`${docModel.baseUrl}/docs`); //Fetch ger sträng\n\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result); // console.log(result.data);\n    // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n    return result; // let db;\n    // try {\n    //     db = await database.getDb();\n    //     const allDocs = await db.collection.find().toArray();\n    //     return allDocs;\n    // } catch (error) {\n    //     return {\n    //         errors: {\n    //             message: error.message,\n    //         }\n    //     };\n    // } finally {\n    //     await db.client.close();\n    // }\n  },\n  // create: async function create(doc) {\n  //     const response = await fetch(`${docs.baseUrl}/create`,\n  //         { \n  //             method: \"POST\",\n  //             headers: {'Content-Type': 'application/json'},\n  //             body: JSON.stringify(doc)\n  //         }\n  //     );\n  //     // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n  //     console.log(response);\n  //     const result = await response.json(); // Gör om sträng till json\n  //     console.log(result);\n  //     // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n  //     // console.log(response.status(201).json(result)); //undefined - ger error\n  //     // console.log(result.result.ops); //undefined - ger error\n  //     //  if (result.result.ok) {\n  //     //     return res.status(201).json({ data: result.ops });\n  //     // }\n  //     // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n  //     // Göra nåt med id:t jag får tillbaka?\n  //     return result;\n  // },\n  create: async function create(newDoc) {\n    // // const database = require(\"../db/database\");\n    // let db;\n    // const response = await fetch(`${docs.baseUrl}/create`,\n    //     { \n    //         method: \"POST\",\n    //         headers: {'Content-Type': 'application/json'},\n    //         body: JSON.stringify(doc)\n    //     }\n    // );\n    // // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n    // console.log(response);\n    // const result = await response.json(); // Gör om sträng till json\n    // console.log(result);\n    // return result;\n    let db;\n\n    try {\n      db = await database.getDb();\n      const result = await db.collection.insertOne(newDoc); // console.log(result);\n\n      return { ...newDoc,\n        _id: result.insertedId\n      };\n    } catch (error) {\n      return {\n        errors: {\n          message: error.message\n        }\n      };\n    } finally {\n      await db.client.close();\n    }\n  },\n  update: async function update(doc) {\n    // const response = await fetch(`${URL}/update/:id`);\n    const response = await fetch(`${docs.baseUrl}/update`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // headers: {'Content-Type': 'Access-Control-Allow-Origin'},\n      // headers: {\"Content-type\": \"application/x-www-form-urlencoded\"},\n      body: JSON.stringify(doc)\n    });\n    console.log(response); // Response jag får är fel\n\n    const result = await response.json(); // Gör om response till json\n\n    console.log(result); // Tomt, pga att response är fel\n\n    return result;\n  }\n};\nexport default docsModel;","map":{"version":3,"names":["docsModel","baseUrl","window","location","href","includes","getAllDocs","response","fetch","docModel","result","json","console","log","create","newDoc","db","database","getDb","collection","insertOne","_id","insertedId","error","errors","message","client","close","update","doc","docs","method","headers","body","JSON","stringify"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/models/docsModel.js"],"sourcesContent":["// const database = require(\"../../../../backend/db/database\");\n// const database = require(\"../../frontend/texteditor/src\");\n\nconst docsModel = {\n    // setCurrentDoc: async function getAllDocs() {\n    //     const response = await fetch(`${docs.baseUrl}/docs`);//Fetch ger sträng\n\n    //     const result = await response.json(); // Gör om sträng till json\n\n    //     console.log(result);\n    //     // console.log(result.data);\n\n    //     // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    //     return result;\n    // },\n    baseUrl: window.location.href.includes(\"localhost\") ? \n        \"http://localhost:1337\" :\n        \"driftsatt api i azure\",\n\n\n    getAllDocs: async function getAllDocs() {\n        const response = await fetch(`${docModel.baseUrl}/docs`);//Fetch ger sträng\n\n        const result = await response.json(); // Gör om sträng till json\n\n        console.log(result);\n        // console.log(result.data);\n\n        // // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n        return result;\n\n\n\n        // let db;\n        // try {\n        //     db = await database.getDb();\n\n        //     const allDocs = await db.collection.find().toArray();\n\n        //     return allDocs;\n        // } catch (error) {\n        //     return {\n        //         errors: {\n        //             message: error.message,\n        //         }\n        //     };\n        // } finally {\n        //     await db.client.close();\n        // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    },\n\n    // create: async function create(doc) {\n    //     const response = await fetch(`${docs.baseUrl}/create`,\n    //         { \n    //             method: \"POST\",\n    //             headers: {'Content-Type': 'application/json'},\n    //             body: JSON.stringify(doc)\n    //         }\n    //     );\n\n    //     // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n    //     console.log(response);\n    //     const result = await response.json(); // Gör om sträng till json\n    //     console.log(result);\n\n\n    //     // Gör en koll så response/result status blev 201 - dvs att dokumentet skapades\n    //     // console.log(response.status(201).json(result)); //undefined - ger error\n    //     // console.log(result.result.ops); //undefined - ger error\n    //     //  if (result.result.ok) {\n    //     //     return res.status(201).json({ data: result.ops });\n    //     // }\n    //     // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n    //     // Göra nåt med id:t jag får tillbaka?\n\n    //     return result;\n    // },\n\n    create: async function create(newDoc) {\n        // // const database = require(\"../db/database\");\n        // let db;\n        // const response = await fetch(`${docs.baseUrl}/create`,\n        //     { \n        //         method: \"POST\",\n        //         headers: {'Content-Type': 'application/json'},\n        //         body: JSON.stringify(doc)\n        //     }\n        // );\n\n        // // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n        // console.log(response);\n        // const result = await response.json(); // Gör om sträng till json\n        // console.log(result);\n\n        // return result;\n\n\n        let db;\n        try {\n            db = await database.getDb();\n\n            const result = await db.collection.insertOne(newDoc);\n\n            // console.log(result);\n            return {\n                ...newDoc,\n                _id: result.insertedId\n            }\n        } catch (error) {\n            return {\n                errors: {\n                    message: error.message,\n                }\n            };\n        } finally {\n            await db.client.close();\n        }\n\n\n    },\n\n    update: async function update(doc) {\n        // const response = await fetch(`${URL}/update/:id`);\n        const response = await fetch(`${docs.baseUrl}/update`,\n            { \n                method: \"PUT\",\n                headers: {\"Content-Type\": \"application/json\"},\n                // headers: {'Content-Type': 'Access-Control-Allow-Origin'},\n                // headers: {\"Content-type\": \"application/x-www-form-urlencoded\"},\n                body: JSON.stringify(doc)\n            }\n        );\n\n        console.log(response); // Response jag får är fel\n        const result = await response.json(); // Gör om response till json\n        console.log(result); // Tomt, pga att response är fel\n        return result;\n    }\n};\n\nexport default docsModel;\n"],"mappings":"AAAA;AACA;AAEA,MAAMA,SAAS,GAAG;EACd;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACAC,OAAO,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,WAA9B,IACL,uBADK,GAEL,uBAdU;EAiBdC,UAAU,EAAE,eAAeA,UAAf,GAA4B;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,QAAQ,CAACR,OAAQ,OAArB,CAA5B,CADoC,CACqB;;IAEzD,MAAMS,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB,CAHoC,CAGE;;IAEtCC,OAAO,CAACC,GAAR,CAAYH,MAAZ,EALoC,CAMpC;IAEA;;IACA,OAAOA,MAAP,CAToC,CAapC;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAqBH,CAlEa;EAoEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEAI,MAAM,EAAE,eAAeA,MAAf,CAAsBC,MAAtB,EAA8B;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAGA,IAAIC,EAAJ;;IACA,IAAI;MACAA,EAAE,GAAG,MAAMC,QAAQ,CAACC,KAAT,EAAX;MAEA,MAAMR,MAAM,GAAG,MAAMM,EAAE,CAACG,UAAH,CAAcC,SAAd,CAAwBL,MAAxB,CAArB,CAHA,CAKA;;MACA,OAAO,EACH,GAAGA,MADA;QAEHM,GAAG,EAAEX,MAAM,CAACY;MAFT,CAAP;IAIH,CAVD,CAUE,OAAOC,KAAP,EAAc;MACZ,OAAO;QACHC,MAAM,EAAE;UACJC,OAAO,EAAEF,KAAK,CAACE;QADX;MADL,CAAP;IAKH,CAhBD,SAgBU;MACN,MAAMT,EAAE,CAACU,MAAH,CAAUC,KAAV,EAAN;IACH;EAGJ,CAxIa;EA0IdC,MAAM,EAAE,eAAeA,MAAf,CAAsBC,GAAtB,EAA2B;IAC/B;IACA,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEsB,IAAI,CAAC7B,OAAQ,SAAjB,EACxB;MACI8B,MAAM,EAAE,KADZ;MAEIC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFb;MAGI;MACA;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf;IALV,CADwB,CAA5B;IAUAjB,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAZ+B,CAYR;;IACvB,MAAMG,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB,CAb+B,CAaO;;IACtCC,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAd+B,CAcV;;IACrB,OAAOA,MAAP;EACH;AA1Ja,CAAlB;AA6JA,eAAeV,SAAf"},"metadata":{},"sourceType":"module"}