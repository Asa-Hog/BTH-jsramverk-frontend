{"ast":null,"code":"const docs = {\n  getAllDocs: async function getAllDocs() {\n    let a = `${URL}/docs`;\n    console.log(\"helo world\");\n    console.log(\"url is \" + a); // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n\n    const response = await fetch(\"http://localhost:1337/docs\"); //Fetch ger sträng\n    // Får inte fram rätt url från två rader upp\n\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result); // console.log(result.data);\n    // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n    return result;\n  },\n  create: async function create() {\n    const doc = {\n      name: \"Nytt dokument 3\",\n      html: \"<div>innehåll </div>\"\n    }; // const response = await fetch(`${URL}/create`);\n\n    const response = await fetch(\"http://localhost:1337/create\", {\n      method: \"POST\",\n      body: doc\n    }); // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n    // Gör en koll så response status blev 201 - dvs att dokumentet skapades med data\n    // if (result.result.ok) {\n    //     console.log(res.status(201).json({ data: result.ops }));\n\n    console.log(response.status == 201); //     return res;\n    // }\n\n    const result = await response.json(); // Gör om sträng till json\n\n    console.log(result);\n    console.log(\"Nytt dokument skapat med id: \" + result.insertedId); // TOMT OBJEKT\n    // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n    return result;\n  },\n  update: async function update() {// const response = await fetch(`${URL}/update/:id`);\n    // const response = await fetch(\"http://localhost:1337/update/:id\");\n    // const result = await response.json(); // Gör om sträng till json\n    // return result;\n  }\n};\nexport default docs;","map":{"version":3,"names":["docs","getAllDocs","a","URL","console","log","response","fetch","result","json","create","doc","name","html","method","body","status","insertedId","update"],"sources":["C:/Users/asa_h/Desktop/bth/jsramverk/frontend/texteditor/src/models/docs.js"],"sourcesContent":["const docs = {\n    getAllDocs: async function getAllDocs() {\n        let a = `${URL}/docs`;\n        console.log(\"helo world\");\n        console.log(\"url is \"+ a);\n        // const response = await fetch(`${URL}/docs`); // Hämtar allt som ligger bakom url/docs\n        const response = await fetch(\"http://localhost:1337/docs\");//Fetch ger sträng\n        // Får inte fram rätt url från två rader upp\n\n        const result = await response.json(); // Gör om sträng till json\n\n        console.log(result);\n        // console.log(result.data);\n\n        // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n        return result;\n    },\n\n    create: async function create() {\n        const doc = {\n            name: \"Nytt dokument 3\",\n            html: \"<div>innehåll </div>\",\n        };\n\n        // const response = await fetch(`${URL}/create`);\n        const response = await fetch(\"http://localhost:1337/create\"\n            ,\n            { \n                method: \"POST\",\n                body: doc\n            }\n        );\n        // Response är det jag får från backend /create. I det här fallet ett objekt m ett nytt id\n\n        // Gör en koll så response status blev 201 - dvs att dokumentet skapades med data\n        // if (result.result.ok) {\n        //     console.log(res.status(201).json({ data: result.ops }));\n        console.log(response.status == 201);\n        //     return res;\n        // }\n\n\n\n\n\n        const result = await response.json(); // Gör om sträng till json\n\n        console.log(result);\n        console.log(\"Nytt dokument skapat med id: \" + result.insertedId); // TOMT OBJEKT\n        // return result.data; // Skriver jag in detta som det ska vara får jag undefined\n\n        return result;\n    },\n\n    update: async function update() {\n        // const response = await fetch(`${URL}/update/:id`);\n        // const response = await fetch(\"http://localhost:1337/update/:id\");\n\n        // const result = await response.json(); // Gör om sträng till json\n\n        // return result;\n    }\n};\n\nexport default docs;\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG;EACTC,UAAU,EAAE,eAAeA,UAAf,GAA4B;IACpC,IAAIC,CAAC,GAAI,GAAEC,GAAI,OAAf;IACAC,OAAO,CAACC,GAAR,CAAY,YAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,YAAWH,CAAvB,EAHoC,CAIpC;;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B,CALoC,CAKuB;IAC3D;;IAEA,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CARoC,CAQE;;IAEtCL,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAVoC,CAWpC;IAEA;;IACA,OAAOA,MAAP;EACH,CAhBQ;EAkBTE,MAAM,EAAE,eAAeA,MAAf,GAAwB;IAC5B,MAAMC,GAAG,GAAG;MACRC,IAAI,EAAE,iBADE;MAERC,IAAI,EAAE;IAFE,CAAZ,CAD4B,CAM5B;;IACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAExB;MACIO,MAAM,EAAE,MADZ;MAEIC,IAAI,EAAEJ;IAFV,CAFwB,CAA5B,CAP4B,CAc5B;IAEA;IACA;IACA;;IACAP,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACU,MAAT,IAAmB,GAA/B,EAnB4B,CAoB5B;IACA;;IAMA,MAAMR,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CA3B4B,CA2BU;;IAEtCL,OAAO,CAACC,GAAR,CAAYG,MAAZ;IACAJ,OAAO,CAACC,GAAR,CAAY,kCAAkCG,MAAM,CAACS,UAArD,EA9B4B,CA8BsC;IAClE;;IAEA,OAAOT,MAAP;EACH,CApDQ;EAsDTU,MAAM,EAAE,eAAeA,MAAf,GAAwB,CAC5B;IACA;IAEA;IAEA;EACH;AA7DQ,CAAb;AAgEA,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}